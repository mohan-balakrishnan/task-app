# Production-ready Spring Boot Configuration

server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /api
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
  http2:
    enabled: true
  error:
    include-message: never
    include-binding-errors: never
    include-stacktrace: never
    include-exception: false

spring:
  application:
    name: task-management-api

  profiles:
    active: ${SPRING_PROFILES_ACTIVE:production}

  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/task_management?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true}
    username: ${SPRING_DATASOURCE_USERNAME:root}
    password: ${SPRING_DATASOURCE_PASSWORD:password}
    driver-class-name: ${SPRING_DATASOURCE_DRIVER_CLASS_NAME:com.mysql.cj.jdbc.Driver}
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 1200000
      connection-timeout: 20000
      validation-timeout: 3000
      leak-detection-threshold: 60000
      pool-name: TaskManagementHikariCP

  jpa:
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:validate}
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: ${SPRING_JPA_SHOW_SQL:false}
    properties:
      hibernate:
        dialect: ${SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT:org.hibernate.dialect.MySQLDialect}
        format_sql: false
        use_sql_comments: false
        jdbc:
          batch_size: 25
          fetch_size: 150
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
        connection:
          provider_disables_autocommit: true
    open-in-view: false

  jackson:
    serialization:
      write-dates-as-timestamps: false
      fail-on-empty-beans: false
    deserialization:
      fail-on-unknown-properties: false
    default-property-inclusion: non_null
    time-zone: UTC

  cache:
    type: simple
    cache-names: users, tasks, categories

  security:
    require-ssl: false

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:taskManagementProductionSecretKeyThatIsVeryLongAndSecureForProduction123456789}
  expiration: ${JWT_EXPIRATION:86400000}  # 24 hours
  refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000}  # 7 days
  issuer: task-management-api
  audience: task-management-users

# Application Configuration
app:
  name: Task Management System
  version: 1.0.0
  description: Production-ready task management application
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:80,http://localhost}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true
    max-age: 3600

# Logging Configuration
logging:
  level:
    com.taskmanagement: ${LOGGING_LEVEL_COM_TASKMANAGEMENT:INFO}
    org.springframework.security: ${LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY:WARN}
    org.springframework.web: WARN
    org.hibernate: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type: WARN
    root: ${LOGGING_LEVEL_ROOT:WARN}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"
  file:
    name: logs/task-management.log
  logback:
    rollingpolicy:
      max-file-size: 10MB
      max-history: 30
      total-size-cap: 300MB

# Management/Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: ${MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE:health,info,metrics,prometheus}
      base-path: /actuator
    jmx:
      exposure:
        exclude: "*"
  endpoint:
    health:
      show-details: ${MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS:when-authorized}
      show-components: when-authorized
      probes:
        enabled: true
    info:
      enabled: true
    metrics:
      enabled: true
  info:
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true
  health:
    diskspace:
      enabled: true
      threshold: 10GB
    db:
      enabled: true
    mail:
      enabled: false
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5, 0.9, 0.95, 0.99
      slo:
        http.server.requests: 10ms, 50ms, 100ms, 200ms, 500ms, 1s, 2s, 5s, 10s
    tags:
      application: ${spring.application.name}
      environment: ${spring.profiles.active}

# API Documentation
springdoc:
  api-docs:
    enabled: true
    path: /api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    operationsSorter: method
    disable-swagger-default-url: true
  show-actuator: false

---
# Development Profile
spring:
  config:
    activate:
      on-profile: development
  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  devtools:
    restart:
      enabled: true
    livereload:
      enabled: true

logging:
  level:
    com.taskmanagement: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

---
# Test Profile
spring:
  config:
    activate:
      on-profile: test
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: password
  h2:
    console:
      enabled: true
  jpa:
    hibernate:
      ddl-auto: create-drop
    database-platform: org.hibernate.dialect.H2Dialect

logging:
  level:
    org.springframework.web: DEBUG
    com.taskmanagement: DEBUG

---
# Production Profile
spring:
  config:
    activate:
      on-profile: production
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
  security:
    require-ssl: ${REQUIRE_SSL:false}

server:
  error:
    include-message: never
    include-binding-errors: never
    include-stacktrace: never
    include-exception: false

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: never

logging:
  level:
    com.taskmanagement: INFO
    org.springframework: WARN
    org.hibernate: WARN
    root: WARN
