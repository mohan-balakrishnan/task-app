version: '3.8'

services:
  # MySQL Database Service
  mysql-db:
    image: mysql:8.0
    container_name: task-management-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: task_management
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_USER: ${MYSQL_USER:-taskuser}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-taskpassword}
    ports:
      - "${MYSQL_PORT:-3307}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
      - ./src/main/resources/data.sql:/docker-entrypoint-initdb.d/02-data.sql:ro
    networks:
      - task-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      interval: 30s
      start_period: 30s

  # Spring Boot Application Service
  task-management-api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: task-management-app
    restart: unless-stopped
    environment:
      # Database Configuration
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/task_management?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER:-taskuser}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD:-taskpassword}
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver

      # JPA Configuration
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      SPRING_JPA_SHOW_SQL: false
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.MySQLDialect
      SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: false

      # JWT Configuration
      JWT_SECRET: ${JWT_SECRET:-taskManagementProductionSecretKeyThatIsVeryLongAndSecureForProduction123456789}
      JWT_EXPIRATION: ${JWT_EXPIRATION:-86400000}
      JWT_REFRESH_EXPIRATION: ${JWT_REFRESH_EXPIRATION:-604800000}

      # Application Configuration
      SERVER_PORT: 8080
      SERVER_SERVLET_CONTEXT_PATH: /api
      SPRING_PROFILES_ACTIVE: production

      # Logging
      LOGGING_LEVEL_COM_TASKMANAGEMENT: INFO
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY: WARN
      LOGGING_LEVEL_ROOT: WARN

      # Actuator
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: health,info,metrics
      MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS: when-authorized
    ports:
      - "${API_PORT:-8080}:8080"
    depends_on:
      mysql-db:
        condition: service_healthy
    networks:
      - task-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: task-management-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./src/main/resources/static:/usr/share/nginx/html:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      task-management-api:
        condition: service_healthy
    networks:
      - task-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

volumes:
  mysql_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  task-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
